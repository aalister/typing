*,
::before,
::after {
    box-sizing: inherit;
}

html {
    --background1: hsl(0, 0%, 99%);
    --background2: hsl(0, 0%, 91%);
    --primary1: hsl(214, 70%, 50%);
    --error1: hsl(7, 70%, 50%);
    --text1: hsl(0, 0%, 10%);
    --text2: hsl(0, 0%, 60%);
    color-scheme: light;
}

html.dark {
    --background1: hsl(0, 0%, 15%);
    --background2: hsl(0, 0%, 20%);
    --primary1: hsl(214, 100%, 70%);
    --error1: hsl(7, 100%, 70%);
    --text1: hsl(0, 0%, 95%);
    --text2: hsl(0, 0%, 60%);
    color-scheme: dark;
}

html {
    background: var(--background1);
    box-sizing: border-box;
    font-size: 62.5%;
}

body {
    color: var(--text1);
    font: 1.6rem / 1.5 "Inter", sans-serif;
    margin: 0;
}

.content {
    margin: 2rem auto;
    max-width: 70rem;
}

.navbar {
    display: flex;
    justify-content: end;
    padding: 2rem;
}

.dropdown {
    position: relative;
}

.dropdown-menu {
    background: var(--background2);
    border-radius: 0.5rem;
    margin-top: 0.8rem;
    position: absolute;
    z-index: 1;
}

.dropdown:not(.active) .dropdown-menu {
    display: none;
}

.text-button {
    background: none;
    border-radius: 0.3rem;
    border: none;
    font: inherit;
    height: 4.8rem;
    padding: 0 1.4rem;
    position: relative;
    z-index: 0;
}

.text-button::before {
    background: var(--text1);
    border-radius: 0.3rem;
    content: "";
    inset: 0;
    opacity: 0;
    position: absolute;
    transition: opacity 100ms;
    z-index: -1;
}

.text-button:hover::before {
    opacity: 0.05;
}

.text-button:active::before {
    opacity: 0.15;
    transition: 0ms;
}

.text-button:focus-visible {
    outline: 0.2rem solid var(--primary1);
}

/* -----------------------------------------------------------------------------
Theme menu */

.theme-icon {
    border-radius: 50%;
    box-shadow: inset 0 0 0 0.2rem var(--text1);
    height: 2rem;
    overflow: hidden;
    position: relative;
    width: 2rem;
}

.theme-icon::before,
.theme-icon::after {
    background: var(--text1);
    content: "";
    position: absolute;
    transition: transform 200ms cubic-bezier(0.2, 1.3, 0.7, 1);
}

.theme-icon::before {
    inset: 0 50% 0 0;
}

.theme-icon::after {
    inset: 0 -100% 0 150%;
}

.dropdown.active .theme-icon::before,
.dropdown.active .theme-icon::after {
    transform: translateX(-200%);
}

.theme-menu {
    display: flex;
    flex-direction: column;
    padding: 0.8rem;
    right: 0;
    width: 15rem;
}

.theme-button.active {
    background: var(--text1);
    color: var(--background1);
}

/* -----------------------------------------------------------------------------
Typing test */

.test-container {
    background: var(--background2);
    border-radius: 0.5rem;
    display: flex;
    flex-direction: column;
    margin: 2rem 0;
    width: 100%;
}

.test-bar {
    align-items: center;
    display: flex;
    justify-content: space-between;
    padding: 1.4rem 4rem;
}

.test-results {
    display: flex;
    overflow: hidden;
    position: relative;
}

.test-result {
    line-height: 1em;
    text-align: center;
    width: 8rem;
}

.test-result.slide-off {
    animation: slide-results-off 100ms ease-in 1;
}

.test-result.slide-on {
    animation: slide-results-on 100ms ease-out 1;
}

@media (prefers-reduced-motion) {
    .test-result.slide-off,
    .test-result.slide-on {
        animation-duration: 0ms;
    }
}

@keyframes slide-results-off {
    100% {
        transform: translateY(-100%);
    }
}

@keyframes slide-results-on {
    0% {
        transform: translateY(100%);
    }
}

.test-result::after {
    font-size: 1.3rem;
}

.test-wpm::after {
    content: " WPM";
}

.test-accuracy::after {
    content: "%";
}

.test-length {
    display: flex;
    gap: 0.5rem;
    position: relative;
}

.test-length-button {
    height: 3.6rem;
    width: 5.8rem;
}

.test-length-button.active {
    color: var(--background1);
}

.test-length-highlight {
    background: var(--text1);
    border-radius: 0.3rem;
    height: 100%;
    position: absolute;
    transform: translateX(6.3rem);
    transition: transform 200ms cubic-bezier(0.2, 1.3, 0.7, 1);
    width: 5.8rem;
}

.test-progress {
    background: var(--background1);
    height: 0.2rem;
    overflow: hidden;
    position: relative;
}

.test-progress-bar {
    background: var(--primary1);
    inset: 0 100% 0 -100%;
    position: absolute;
    transition: transform 200ms;
}

.test {
    font-size: 2rem;
    height: 3em;
    line-height: 1.5em;
    margin: 4rem;
    overflow: hidden;
    position: relative;
    z-index: 0;
}

.test-cursor {
    background: var(--text2);
    height: 1.5em;
    position: absolute;
    transition: transform 100ms;
    width: 0.2rem;
    z-index: -1;
}

.test-text.slide-off {
    animation: slide-text-off 100ms ease-in-out;
}

.test-text.slide-on {
    animation: slide-text-on 100ms ease-out;
}

@media (prefers-reduced-motion) {
    .test-text.slide-off,
    .test-text.slide-on {
        animation-duration: 0ms;
    }
}

@keyframes slide-text-off {
    100% {
        transform: translateY(-1.5em);
    }
}

@keyframes slide-text-on {
    0% {
        transform: translateY(3em);
    }
}

.test-text .complete {
    color: var(--text2);
}

.test-text .complete.incorrect {
    color: var(--error1);
}

/* -----------------------------------------------------------------------------
Keyboard */

.keyboard {
    background: var(--background2);
    border-radius: 0.5rem;
    color: var(--text2);
    margin: 0 auto;
    padding: 1rem;
    width: 62rem;
}

.keyboard-row {
    display: flex;
}

.keyboard-key {
    align-items: center;
    background: var(--background1);
    border-radius: 0.2rem;
    display: flex;
    height: 3.6rem;
    justify-content: center;
    margin: 0.2rem;
}

.keyboard-key-4-wide {
    width: 3.6rem;
}

.keyboard-key-5-wide {
    width: 4.6rem;
}

.keyboard-key-6-wide {
    width: 5.6rem;
}

.keyboard-key-7-wide {
    width: 6.6rem;
}

.keyboard-key-8-wide {
    width: 7.6rem;
}

.keyboard-key-11-wide {
    width: 10.6rem;
}

.keyboard-key-24-wide {
    width: 23.6rem;
}

.keyboard-key-enter {
    position: relative;
}

.keyboard-key-enter::after {
    background: var(--background1);
    border-radius: 0.2rem;
    content: "";
    inset: 0 0 -4rem 1rem;
    position: absolute;
}

.keyboard-key.active,
.keyboard-key-enter.active::after {
    background: var(--text1);
    color: var(--background1);
}
